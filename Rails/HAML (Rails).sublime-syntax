%YAML 1.2
# https://haml.info/docs/yardoc/file.REFERENCE.html
---
name: HAML (Rails)
scope: text.haml
version: 2

file_extensions:
  - haml
  - sass

contexts:

  main:
    - include: comments
    - include: doctypes
    - include: tags
    - include: escapes
    - include: rubylines
    - include: continuations
    - include: text-interpolations
    - include: filters

###[ COMMENTS ]###############################################################

  comments:
    # https://haml.info/docs/yardoc/file.REFERENCE.html#comments
    # haml comments
    - match: ^ *(-#)\s*\S.*$\n?
      scope: comment.line.slash.haml
      captures:
        1: punctuation.definition.comment.haml
    - match: ^( *)(-#)\s*$
      captures:
        2: punctuation.definition.comment.haml
      push: comment-body
    # html comments
    - match: ^( *)(/)((\[)[^\]]*(\]))?\s*$
      captures:
        2: punctuation.definition.comment.haml
        3: meta.brackets.haml
        4: punctuation.section.brackets.begin.haml
        5: punctuation.section.brackets.end.haml
      push: comment-body
    - match: ^ *(/)((\[)[^\]]*(\]))?\s*\S.*$\n?
      scope: comment.line.slash.haml
      captures:
        1: punctuation.definition.comment.haml
        2: meta.brackets.haml
        3: punctuation.section.brackets.begin.haml
        4: punctuation.section.brackets.end.haml

  comment-body:
    - meta_scope: comment.block.haml
    - match: ^(?!\1  )
      pop: 1
    - include: main

###[ CONTINUATIONS ]##########################################################

  continuations:
    # Attribute sections and embedded ruby code may continue on next line
    # if the current line is terminated with comma.
    # https://haml.info/docs/yardoc/file.REFERENCE.html#attributes
    # https://haml.info/docs/yardoc/file.REFERENCE.html#running-ruby--
    - match: (,)\n
      captures:
        1: punctuation.separator.sequence.haml
      push: comma-continuations-body
    # https://haml.info/docs/yardoc/file.REFERENCE.html#multiline
    - match: (\|)\s*\n
      captures:
        1: punctuation.separator.continuation.haml
      push: pipe-continuations-body

  comma-continuations-body:
    # Skip "line ends with pipe" check if previous line was continued by comma.
    - match: (?=\S)
      pop: 1

  pipe-continuations-body:
    - match: ^
      pop: 1

###[ INTERPOLATIONS ]#########################################################

  string-interpolations:
    # Interpolation with clearing `string` scope.
    # https://haml.info/docs/yardoc/file.REFERENCE.html#ruby-interpolation-
    # Used in
    # - `HTML (for HAML).sublime-syntax`
    # - `CSS (for HAML).sublime-syntax`
    # - `JavaScript (for HAML).sublime-syntax`
    - match: \#\{
      scope: punctuation.section.interpolation.begin.haml
      push: string-interpolation-expression
    - match: (?=#[@$])
      push: string-interpolation-variable

  string-interpolation-expression:
    - clear_scopes: 1
    - meta_scope: meta.interpolation.haml
    - meta_content_scope: source.ruby.rails.embedded.haml
    - include: text-interpolation-expression

  string-interpolation-variable:
    - clear_scopes: 1
    - meta_scope: meta.interpolation.haml
    - include: text-interpolation-variable

  text-interpolations:
    # Interpolation without clearing `string` scope for use in plain text.
    # https://haml.info/docs/yardoc/file.REFERENCE.html#ruby-interpolation-
    # Used in:
    # - `CSS (for HAML).sublime-syntax`
    # - `JavaScript (for HAML).sublime-syntax`
    - match: \#\{
      scope: punctuation.section.interpolation.begin.haml
      push: text-interpolation-expression
    - match: (?=#[@$])
      push: text-interpolation-variable

  text-interpolation-expression:
    - meta_scope: meta.interpolation.haml
    - meta_content_scope: source.ruby.rails.embedded.haml
    - match: \}
      scope: punctuation.section.interpolation.end.haml
      pop: 1
    - include: Ruby (for HAML).sublime-syntax#nest-curly-expressions
    - include: Ruby (for HAML).sublime-syntax#expressions

  text-interpolation-variable:
    - meta_scope: meta.interpolation.haml
    - include: Ruby (for HAML).sublime-syntax#interpolated-ruby-variables

###[ EMBEDDED RUBY ]##########################################################

  rubylines:
    - match: ^\s*(=|-|~)
      scope: punctuation.section.embedded.haml
      push: rubyline-body

  rubyline:
    - match: (=|-|~)
      scope: punctuation.section.embedded.haml
      set: rubyline-body

  rubyline-body:
    - meta_scope: meta.embedded.haml meta.line.ruby.haml
    - meta_content_scope: source.ruby.rails.embedded.haml
    - match: ((do|\{)( \|[^|]+\|)?)$
      captures:
        1: source.ruby.rails.embedded.html
        2: keyword.control.start-block.ruby
      pop: 1
    - include: ruby-code

  ruby-code:
    - match: $
      pop: 1
    # A line after a pipe-continuation must be terminated by pipe, too.
    - match: ^(?!.*(\|\s*$))
      pop: 1
    - include: Ruby (for HAML).sublime-syntax
      apply_prototype: true

###[ HAML TAGS ]##############################################################

  doctypes:
    # https://haml.info/docs/yardoc/file.REFERENCE.html#doctype-
    - match: ^(!!!)(\s+(.*)\s*)?$
      scope: meta.doctype.haml
      captures:
        1: punctuation.definition.doctype.haml
        2: constant.language.doctype.haml

  escapes:
    - match: ^\s*(\\.)
      captures:
        1: meta.escape.haml

  tags:
    - match: ^\s*(?:((%)([\w:]+))|(?=\.|#))
      captures:
        1: meta.tag.haml
        2: punctuation.definition.tag.haml
        3: entity.name.tag.haml
      push: tag-content

  tag-content:
    - match: (\.)[\w-]+
      scope: meta.tag.haml entity.name.tag.class.haml
      captures:
        1: punctuation.definition.tag.haml
    - match: (#)[\w-]+
      scope: meta.tag.haml entity.name.tag.id.haml
      captures:
        1: punctuation.definition.tag.haml
    - match: \{(?=.*\}|.*(,|\|\s*)$)
      scope: punctuation.section.braces.begin.haml
      push: tag-attributes-content
    - match: \[(?=.*\]|.*(,|\|\s*)$)
      scope: punctuation.section.brackets.begin.haml
      push: tag-object-content
    - match: \(
      scope: punctuation.section.parens.begin.haml
      push: tag-attributes-html
    - include: rubyline
    - match: /
      scope: punctuation.terminator.tag.haml
    - match: '[<>]'
      scope: keyword.operator.whitespace.haml
    - match: ''
      pop: 1

  tag-attributes-content:
    - meta_scope: meta.tag.attributes.haml meta.braces.haml
    - meta_content_scope: source.ruby.rails.embedded.haml
    - match: \}(?!.*\})
      scope: punctuation.section.braces.end.haml
      pop: 1
    - include: ruby-code

  tag-object-content:
    - meta_scope: meta.tag.object.haml meta.brackets.haml
    - meta_content_scope: source.ruby.rails.embedded.haml
    - match: \](?!.*\])
      scope: punctuation.section.brackets.end.haml
      pop: 1
    - include: ruby-code

  tag-attributes-html:
    - meta_scope: meta.tag.attributes.haml meta.parens.haml
    - match: \)
      scope: punctuation.section.parens.end.haml
      pop: 1
    - include: HTML (for HAML).sublime-syntax#tag-attributes

###[ FILTERS ]##########################################################

  filters:
    # https://github.com/haml/haml/blob/main/lib/haml/filters.rb
    # Missing are currently: plain, Escaped, preserve, CDATA,  LESS
    - match: ^(\s*):(ruby)$
      captures:
        2: constant.language.name.ruby.filter.haml
      push:
        - meta_scope: text.ruby.filter.haml
        - match: ^(?!(\1\s)|\s*$)
          pop: true
        - include: scope:source.ruby
    - match: ^(\s*):(javascript)$
      captures:
        2: constant.language.name.javascript.filter.haml
      push:
        - meta_scope: source.js.filter.haml
        - match: ^(?!(\1\s)|\s*$)
          pop: true
        - include: scope:source.js
    - match: ^(\s*):(coffee)$
      captures:
        2: constant.language.name.coffeescript.filter.haml
      push:
        - meta_scope: text.coffeescript.filter.haml
        - match: ^(?!(\1\s)|\s*$)
          pop: true
        - include: scope:source.coffee
    - match: ^(\s*):(css)$
      captures:
        2: constant.language.name.css.filter.haml
      push:
        - meta_scope: text.css.filter.haml
        - match: ^(?!(\1\s)|\s*$)
          pop: true
        - include: scope:source.css
    - match: ^(\s*):(sass)$
      captures:
        2: constant.language.name.sass.filter.haml
      push:
        - meta_scope: text.sass.filter.haml
        - match: ^(?!(\1\s)|\s*$)
          pop: true
        - include: scope:source.sass
    - match: ^(\s*):(scss)$
      captures:
        2: constant.language.name.scss.filter.haml
      push:
        - meta_scope: text.scss.filter.haml
        - match: ^(?!(\1\s)|\s*$)
          pop: true
        - include: scope:source.scss
    - match: ^(\s*):(markdown)$
      captures:
        2: constant.language.name.markdown.filter.haml
      push:
        - meta_scope: text.markdown.filter.haml
        - match: ^(?!(\1\s)|\s*$)
          pop: true
        - include: scope:text.html.markdown
    - match: ^(\s*):(erb)$
      captures:
        2: constant.language.name.erb.filter.haml
      push:
        - meta_scope: text.erb.filter.haml
        - match: ^(?!(\1\s)|\s*$)
          pop: true
        # XXX: in oder versions: scope:html.ruby
        - include: scope:text.html.rails
